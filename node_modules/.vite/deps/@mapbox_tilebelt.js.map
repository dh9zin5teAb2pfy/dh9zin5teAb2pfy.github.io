{
  "version": 3,
  "sources": ["../../@mapbox/tilebelt/index.js"],
  "sourcesContent": ["'use strict';\n\nvar d2r = Math.PI / 180,\n    r2d = 180 / Math.PI;\n\n/**\n * Get the bbox of a tile\n *\n * @name tileToBBOX\n * @param {Array<number>} tile\n * @returns {Array<number>} bbox\n * @example\n * var bbox = tileToBBOX([5, 10, 10])\n * //=bbox\n */\nfunction tileToBBOX(tile) {\n    var e = tile2lon(tile[0] + 1, tile[2]);\n    var w = tile2lon(tile[0], tile[2]);\n    var s = tile2lat(tile[1] + 1, tile[2]);\n    var n = tile2lat(tile[1], tile[2]);\n    return [w, s, e, n];\n}\n\n/**\n * Get a geojson representation of a tile\n *\n * @name tileToGeoJSON\n * @param {Array<number>} tile\n * @returns {Feature<Polygon>}\n * @example\n * var poly = tileToGeoJSON([5, 10, 10])\n * //=poly\n */\nfunction tileToGeoJSON(tile) {\n    var bbox = tileToBBOX(tile);\n    var poly = {\n        type: 'Polygon',\n        coordinates: [[\n            [bbox[0], bbox[3]],\n            [bbox[0], bbox[1]],\n            [bbox[2], bbox[1]],\n            [bbox[2], bbox[3]],\n            [bbox[0], bbox[3]]\n        ]]\n    };\n    return poly;\n}\n\nfunction tile2lon(x, z) {\n    return x / Math.pow(2, z) * 360 - 180;\n}\n\nfunction tile2lat(y, z) {\n    var n = Math.PI - 2 * Math.PI * y / Math.pow(2, z);\n    return r2d * Math.atan(0.5 * (Math.exp(n) - Math.exp(-n)));\n}\n\n/**\n * Get the tile for a point at a specified zoom level\n *\n * @name pointToTile\n * @param {number} lon\n * @param {number} lat\n * @param {number} z\n * @returns {Array<number>} tile\n * @example\n * var tile = pointToTile(1, 1, 20)\n * //=tile\n */\nfunction pointToTile(lon, lat, z) {\n    var tile = pointToTileFraction(lon, lat, z);\n    tile[0] = Math.floor(tile[0]);\n    tile[1] = Math.floor(tile[1]);\n    return tile;\n}\n\n/**\n * Get the 4 tiles one zoom level higher\n *\n * @name getChildren\n * @param {Array<number>} tile\n * @returns {Array<Array<number>>} tiles\n * @example\n * var tiles = getChildren([5, 10, 10])\n * //=tiles\n */\nfunction getChildren(tile) {\n    return [\n        [tile[0] * 2, tile[1] * 2, tile[2] + 1],\n        [tile[0] * 2 + 1, tile[1] * 2, tile[2 ] + 1],\n        [tile[0] * 2 + 1, tile[1] * 2 + 1, tile[2] + 1],\n        [tile[0] * 2, tile[1] * 2 + 1, tile[2] + 1]\n    ];\n}\n\n/**\n * Get the tile one zoom level lower\n *\n * @name getParent\n * @param {Array<number>} tile\n * @returns {Array<number>} tile\n * @example\n * var tile = getParent([5, 10, 10])\n * //=tile\n */\nfunction getParent(tile) {\n    return [tile[0] >> 1, tile[1] >> 1, tile[2] - 1];\n}\n\nfunction getSiblings(tile) {\n    return getChildren(getParent(tile));\n}\n\n/**\n * Get the 3 sibling tiles for a tile\n *\n * @name getSiblings\n * @param {Array<number>} tile\n * @returns {Array<Array<number>>} tiles\n * @example\n * var tiles = getSiblings([5, 10, 10])\n * //=tiles\n */\nfunction hasSiblings(tile, tiles) {\n    var siblings = getSiblings(tile);\n    for (var i = 0; i < siblings.length; i++) {\n        if (!hasTile(tiles, siblings[i])) return false;\n    }\n    return true;\n}\n\n/**\n * Check to see if an array of tiles contains a particular tile\n *\n * @name hasTile\n * @param {Array<Array<number>>} tiles\n * @param {Array<number>} tile\n * @returns {boolean}\n * @example\n * var tiles = [\n *     [0, 0, 5],\n *     [0, 1, 5],\n *     [1, 1, 5],\n *     [1, 0, 5]\n * ]\n * hasTile(tiles, [0, 0, 5])\n * //=boolean\n */\nfunction hasTile(tiles, tile) {\n    for (var i = 0; i < tiles.length; i++) {\n        if (tilesEqual(tiles[i], tile)) return true;\n    }\n    return false;\n}\n\n/**\n * Check to see if two tiles are the same\n *\n * @name tilesEqual\n * @param {Array<number>} tile1\n * @param {Array<number>} tile2\n * @returns {boolean}\n * @example\n * tilesEqual([0, 1, 5], [0, 0, 5])\n * //=boolean\n */\nfunction tilesEqual(tile1, tile2) {\n    return (\n        tile1[0] === tile2[0] &&\n        tile1[1] === tile2[1] &&\n        tile1[2] === tile2[2]\n    );\n}\n\n/**\n * Get the quadkey for a tile\n *\n * @name tileToQuadkey\n * @param {Array<number>} tile\n * @returns {string} quadkey\n * @example\n * var quadkey = tileToQuadkey([0, 1, 5])\n * //=quadkey\n */\nfunction tileToQuadkey(tile) {\n    var index = '';\n    for (var z = tile[2]; z > 0; z--) {\n        var b = 0;\n        var mask = 1 << (z - 1);\n        if ((tile[0] & mask) !== 0) b++;\n        if ((tile[1] & mask) !== 0) b += 2;\n        index += b.toString();\n    }\n    return index;\n}\n\n/**\n * Get the tile for a quadkey\n *\n * @name quadkeyToTile\n * @param {string} quadkey\n * @returns {Array<number>} tile\n * @example\n * var tile = quadkeyToTile('00001033')\n * //=tile\n */\nfunction quadkeyToTile(quadkey) {\n    var x = 0;\n    var y = 0;\n    var z = quadkey.length;\n\n    for (var i = z; i > 0; i--) {\n        var mask = 1 << (i - 1);\n        var q = +quadkey[z - i];\n        if (q === 1) x |= mask;\n        if (q === 2) y |= mask;\n        if (q === 3) {\n            x |= mask;\n            y |= mask;\n        }\n    }\n    return [x, y, z];\n}\n\n/**\n * Get the smallest tile to cover a bbox\n *\n * @name bboxToTile\n * @param {Array<number>} bbox\n * @returns {Array<number>} tile\n * @example\n * var tile = bboxToTile([ -178, 84, -177, 85 ])\n * //=tile\n */\nfunction bboxToTile(bboxCoords) {\n    var min = pointToTile(bboxCoords[0], bboxCoords[1], 32);\n    var max = pointToTile(bboxCoords[2], bboxCoords[3], 32);\n    var bbox = [min[0], min[1], max[0], max[1]];\n\n    var z = getBboxZoom(bbox);\n    if (z === 0) return [0, 0, 0];\n    var x = bbox[0] >>> (32 - z);\n    var y = bbox[1] >>> (32 - z);\n    return [x, y, z];\n}\n\nfunction getBboxZoom(bbox) {\n    var MAX_ZOOM = 28;\n    for (var z = 0; z < MAX_ZOOM; z++) {\n        var mask = 1 << (32 - (z + 1));\n        if (((bbox[0] & mask) !== (bbox[2] & mask)) ||\n            ((bbox[1] & mask) !== (bbox[3] & mask))) {\n            return z;\n        }\n    }\n\n    return MAX_ZOOM;\n}\n\n/**\n * Get the precise fractional tile location for a point at a zoom level\n *\n * @name pointToTileFraction\n * @param {number} lon\n * @param {number} lat\n * @param {number} z\n * @returns {Array<number>} tile fraction\n * var tile = pointToTileFraction(30.5, 50.5, 15)\n * //=tile\n */\nfunction pointToTileFraction(lon, lat, z) {\n    var sin = Math.sin(lat * d2r),\n        z2 = Math.pow(2, z),\n        x = z2 * (lon / 360 + 0.5),\n        y = z2 * (0.5 - 0.25 * Math.log((1 + sin) / (1 - sin)) / Math.PI);\n\n    // Wrap Tile X\n    x = x % z2;\n    if (x < 0) x = x + z2;\n    return [x, y, z];\n}\n\nmodule.exports = {\n    tileToGeoJSON: tileToGeoJSON,\n    tileToBBOX: tileToBBOX,\n    getChildren: getChildren,\n    getParent: getParent,\n    getSiblings: getSiblings,\n    hasTile: hasTile,\n    hasSiblings: hasSiblings,\n    tilesEqual: tilesEqual,\n    tileToQuadkey: tileToQuadkey,\n    quadkeyToTile: quadkeyToTile,\n    pointToTile: pointToTile,\n    bboxToTile: bboxToTile,\n    pointToTileFraction: pointToTileFraction\n};\n"],
  "mappings": ";;;;;AAAA;AAAA;AAEA,QAAI,MAAM,KAAK,KAAK;AAApB,QACI,MAAM,MAAM,KAAK;AAYrB,aAAS,WAAW,MAAM;AACtB,UAAI,IAAI,SAAS,KAAK,CAAC,IAAI,GAAG,KAAK,CAAC,CAAC;AACrC,UAAI,IAAI,SAAS,KAAK,CAAC,GAAG,KAAK,CAAC,CAAC;AACjC,UAAI,IAAI,SAAS,KAAK,CAAC,IAAI,GAAG,KAAK,CAAC,CAAC;AACrC,UAAI,IAAI,SAAS,KAAK,CAAC,GAAG,KAAK,CAAC,CAAC;AACjC,aAAO,CAAC,GAAG,GAAG,GAAG,CAAC;AAAA,IACtB;AAYA,aAAS,cAAc,MAAM;AACzB,UAAI,OAAO,WAAW,IAAI;AAC1B,UAAI,OAAO;AAAA,QACP,MAAM;AAAA,QACN,aAAa,CAAC;AAAA,UACV,CAAC,KAAK,CAAC,GAAG,KAAK,CAAC,CAAC;AAAA,UACjB,CAAC,KAAK,CAAC,GAAG,KAAK,CAAC,CAAC;AAAA,UACjB,CAAC,KAAK,CAAC,GAAG,KAAK,CAAC,CAAC;AAAA,UACjB,CAAC,KAAK,CAAC,GAAG,KAAK,CAAC,CAAC;AAAA,UACjB,CAAC,KAAK,CAAC,GAAG,KAAK,CAAC,CAAC;AAAA,QACrB,CAAC;AAAA,MACL;AACA,aAAO;AAAA,IACX;AAEA,aAAS,SAAS,GAAG,GAAG;AACpB,aAAO,IAAI,KAAK,IAAI,GAAG,CAAC,IAAI,MAAM;AAAA,IACtC;AAEA,aAAS,SAAS,GAAG,GAAG;AACpB,UAAI,IAAI,KAAK,KAAK,IAAI,KAAK,KAAK,IAAI,KAAK,IAAI,GAAG,CAAC;AACjD,aAAO,MAAM,KAAK,KAAK,OAAO,KAAK,IAAI,CAAC,IAAI,KAAK,IAAI,CAAC,CAAC,EAAE;AAAA,IAC7D;AAcA,aAAS,YAAY,KAAK,KAAK,GAAG;AAC9B,UAAI,OAAO,oBAAoB,KAAK,KAAK,CAAC;AAC1C,WAAK,CAAC,IAAI,KAAK,MAAM,KAAK,CAAC,CAAC;AAC5B,WAAK,CAAC,IAAI,KAAK,MAAM,KAAK,CAAC,CAAC;AAC5B,aAAO;AAAA,IACX;AAYA,aAAS,YAAY,MAAM;AACvB,aAAO;AAAA,QACH,CAAC,KAAK,CAAC,IAAI,GAAG,KAAK,CAAC,IAAI,GAAG,KAAK,CAAC,IAAI,CAAC;AAAA,QACtC,CAAC,KAAK,CAAC,IAAI,IAAI,GAAG,KAAK,CAAC,IAAI,GAAG,KAAK,CAAE,IAAI,CAAC;AAAA,QAC3C,CAAC,KAAK,CAAC,IAAI,IAAI,GAAG,KAAK,CAAC,IAAI,IAAI,GAAG,KAAK,CAAC,IAAI,CAAC;AAAA,QAC9C,CAAC,KAAK,CAAC,IAAI,GAAG,KAAK,CAAC,IAAI,IAAI,GAAG,KAAK,CAAC,IAAI,CAAC;AAAA,MAC9C;AAAA,IACJ;AAYA,aAAS,UAAU,MAAM;AACrB,aAAO,CAAC,KAAK,CAAC,KAAK,GAAG,KAAK,CAAC,KAAK,GAAG,KAAK,CAAC,IAAI,CAAC;AAAA,IACnD;AAEA,aAAS,YAAY,MAAM;AACvB,aAAO,YAAY,UAAU,IAAI,CAAC;AAAA,IACtC;AAYA,aAAS,YAAY,MAAM,OAAO;AAC9B,UAAI,WAAW,YAAY,IAAI;AAC/B,eAAS,IAAI,GAAG,IAAI,SAAS,QAAQ,KAAK;AACtC,YAAI,CAAC,QAAQ,OAAO,SAAS,CAAC,CAAC;AAAG,iBAAO;AAAA,MAC7C;AACA,aAAO;AAAA,IACX;AAmBA,aAAS,QAAQ,OAAO,MAAM;AAC1B,eAAS,IAAI,GAAG,IAAI,MAAM,QAAQ,KAAK;AACnC,YAAI,WAAW,MAAM,CAAC,GAAG,IAAI;AAAG,iBAAO;AAAA,MAC3C;AACA,aAAO;AAAA,IACX;AAaA,aAAS,WAAW,OAAO,OAAO;AAC9B,aACI,MAAM,CAAC,MAAM,MAAM,CAAC,KACpB,MAAM,CAAC,MAAM,MAAM,CAAC,KACpB,MAAM,CAAC,MAAM,MAAM,CAAC;AAAA,IAE5B;AAYA,aAAS,cAAc,MAAM;AACzB,UAAI,QAAQ;AACZ,eAAS,IAAI,KAAK,CAAC,GAAG,IAAI,GAAG,KAAK;AAC9B,YAAI,IAAI;AACR,YAAI,OAAO,KAAM,IAAI;AACrB,aAAK,KAAK,CAAC,IAAI,UAAU;AAAG;AAC5B,aAAK,KAAK,CAAC,IAAI,UAAU;AAAG,eAAK;AACjC,iBAAS,EAAE,SAAS;AAAA,MACxB;AACA,aAAO;AAAA,IACX;AAYA,aAAS,cAAc,SAAS;AAC5B,UAAI,IAAI;AACR,UAAI,IAAI;AACR,UAAI,IAAI,QAAQ;AAEhB,eAAS,IAAI,GAAG,IAAI,GAAG,KAAK;AACxB,YAAI,OAAO,KAAM,IAAI;AACrB,YAAI,IAAI,CAAC,QAAQ,IAAI,CAAC;AACtB,YAAI,MAAM;AAAG,eAAK;AAClB,YAAI,MAAM;AAAG,eAAK;AAClB,YAAI,MAAM,GAAG;AACT,eAAK;AACL,eAAK;AAAA,QACT;AAAA,MACJ;AACA,aAAO,CAAC,GAAG,GAAG,CAAC;AAAA,IACnB;AAYA,aAAS,WAAW,YAAY;AAC5B,UAAI,MAAM,YAAY,WAAW,CAAC,GAAG,WAAW,CAAC,GAAG,EAAE;AACtD,UAAI,MAAM,YAAY,WAAW,CAAC,GAAG,WAAW,CAAC,GAAG,EAAE;AACtD,UAAI,OAAO,CAAC,IAAI,CAAC,GAAG,IAAI,CAAC,GAAG,IAAI,CAAC,GAAG,IAAI,CAAC,CAAC;AAE1C,UAAI,IAAI,YAAY,IAAI;AACxB,UAAI,MAAM;AAAG,eAAO,CAAC,GAAG,GAAG,CAAC;AAC5B,UAAI,IAAI,KAAK,CAAC,MAAO,KAAK;AAC1B,UAAI,IAAI,KAAK,CAAC,MAAO,KAAK;AAC1B,aAAO,CAAC,GAAG,GAAG,CAAC;AAAA,IACnB;AAEA,aAAS,YAAY,MAAM;AACvB,UAAI,WAAW;AACf,eAAS,IAAI,GAAG,IAAI,UAAU,KAAK;AAC/B,YAAI,OAAO,KAAM,MAAM,IAAI;AAC3B,aAAM,KAAK,CAAC,IAAI,WAAW,KAAK,CAAC,IAAI,UAC/B,KAAK,CAAC,IAAI,WAAW,KAAK,CAAC,IAAI,OAAQ;AACzC,iBAAO;AAAA,QACX;AAAA,MACJ;AAEA,aAAO;AAAA,IACX;AAaA,aAAS,oBAAoB,KAAK,KAAK,GAAG;AACtC,UAAI,MAAM,KAAK,IAAI,MAAM,GAAG,GACxB,KAAK,KAAK,IAAI,GAAG,CAAC,GAClB,IAAI,MAAM,MAAM,MAAM,MACtB,IAAI,MAAM,MAAM,OAAO,KAAK,KAAK,IAAI,QAAQ,IAAI,IAAI,IAAI,KAAK;AAGlE,UAAI,IAAI;AACR,UAAI,IAAI;AAAG,YAAI,IAAI;AACnB,aAAO,CAAC,GAAG,GAAG,CAAC;AAAA,IACnB;AAEA,WAAO,UAAU;AAAA,MACb;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,IACJ;AAAA;AAAA;",
  "names": []
}
